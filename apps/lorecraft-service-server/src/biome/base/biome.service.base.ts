/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Biome as PrismaBiome } from "@prisma/client";

export class BiomeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BiomeCountArgs, "select">): Promise<number> {
    return this.prisma.biome.count(args);
  }

  async biomes(args: Prisma.BiomeFindManyArgs): Promise<PrismaBiome[]> {
    return this.prisma.biome.findMany(args);
  }
  async biome(args: Prisma.BiomeFindUniqueArgs): Promise<PrismaBiome | null> {
    return this.prisma.biome.findUnique(args);
  }
  async createBiome(args: Prisma.BiomeCreateArgs): Promise<PrismaBiome> {
    return this.prisma.biome.create(args);
  }
  async updateBiome(args: Prisma.BiomeUpdateArgs): Promise<PrismaBiome> {
    return this.prisma.biome.update(args);
  }
  async deleteBiome(args: Prisma.BiomeDeleteArgs): Promise<PrismaBiome> {
    return this.prisma.biome.delete(args);
  }
}
