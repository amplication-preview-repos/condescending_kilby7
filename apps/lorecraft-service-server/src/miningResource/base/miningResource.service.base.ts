/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MiningResource as PrismaMiningResource } from "@prisma/client";

export class MiningResourceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MiningResourceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.miningResource.count(args);
  }

  async miningResources(
    args: Prisma.MiningResourceFindManyArgs
  ): Promise<PrismaMiningResource[]> {
    return this.prisma.miningResource.findMany(args);
  }
  async miningResource(
    args: Prisma.MiningResourceFindUniqueArgs
  ): Promise<PrismaMiningResource | null> {
    return this.prisma.miningResource.findUnique(args);
  }
  async createMiningResource(
    args: Prisma.MiningResourceCreateArgs
  ): Promise<PrismaMiningResource> {
    return this.prisma.miningResource.create(args);
  }
  async updateMiningResource(
    args: Prisma.MiningResourceUpdateArgs
  ): Promise<PrismaMiningResource> {
    return this.prisma.miningResource.update(args);
  }
  async deleteMiningResource(
    args: Prisma.MiningResourceDeleteArgs
  ): Promise<PrismaMiningResource> {
    return this.prisma.miningResource.delete(args);
  }
}
